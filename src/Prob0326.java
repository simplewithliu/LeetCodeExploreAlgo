package com.leetcode.explore;

/*

3的幂

给定一个整数，写一个函数来判断它是否是 3 的幂次方。如果是，返回 true ；否则，返回 false 。
整数 n 是 3 的幂次方需满足：存在整数 x 使得 n == 3 ^ x

示例 1：
输入：n = 27
输出：true

示例 2：
输入：n = 0
输出：false

示例 3：
输入：n = 9
输出：true

示例 4：
输入：n = 45
输出：false

提示：-231 <= n <= 231 - 1
 
进阶：你能不使用循环或者递归来完成本题吗？

*/

public class Prob0326 {
	class Solution1 {
		public boolean isPowerOfThree(int n) {
			if (n < 1) return false;
			while (n % 3 == 0) {
				n /= 3;
			}
			return n == 1;
		}
	}

	class Solution2 {
		public boolean isPowerOfThree(int n) {
			double epsilon = 1e-10;
			return (Math.log(n) / Math.log(3) + epsilon) % 1 <= 2 * epsilon;
		}
	}
}
// https://leetcode-cn.com/problems/power-of-three/solution/3de-mi-by-leetcode/